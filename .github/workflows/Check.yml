name: CI Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17.0.8'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Formatter
        id: cache-formatter
        uses: actions/cache@v3
        with:
          path: google-java-format.jar
          key: google-java-format-1.20.0-${{ hashFiles('**/*.java') }}

      - name: Download Formatter if not cached
        if: steps.cache-formatter.outputs.cache-hit != 'true'
        run: |
          curl -Ls https://github.com/google/google-java-format/releases/download/v1.20.0/google-java-format-1.20.0-all-deps.jar -o google-java-format.jar

      - name: Check Java formatting
        run: |
          echo "Checking Java formatting..."
          FILES=$(git ls-files -- 'src/**/*.java')
          echo "Checking files:"
          echo "$FILES"
          java -jar google-java-format.jar --dry-run --set-exit-if-changed $FILES || {
            echo "::error::Java formatting check failed. Run 'java -jar google-java-format.jar -i $FILES' to fix formatting issues."
            exit 1
          }

      - name: Run tests with Gradle
        run: ./gradlew test --info

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test/**