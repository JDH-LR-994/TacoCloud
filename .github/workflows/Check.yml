name: CI Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17.0.8'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Formatter
        id: cache-formatter
        uses: actions/cache@v3
        with:
          path: google-java-format.jar
          key: google-java-format-1.20.0-${{ hashFiles('**/*.java') }}

      - name: Download Formatter if not cached
        if: steps.cache-formatter.outputs.cache-hit != 'true'
        run: |
          curl -Ls https://github.com/google/google-java-format/releases/download/v1.20.0/google-java-format-1.20.0-all-deps.jar -o google-java-format.jar

      - name: Check Java formatting with detailed diff
        run: |
          echo "Checking Java formatting..."
          FILES=$(git ls-files -- 'src/**/*.java')
          echo "Files to check:"
          echo "$FILES"
          
          echo "Creating backups for diff..."
          mkdir -p /tmp/java-backup
          for file in $FILES; do
            cp "$file" "/tmp/java-backup/$(basename "$file").original"
          done

          echo "Applying formatter to compare changes..."
          java -jar google-java-format.jar -i $FILES

          echo "Checking for formatting differences..."
          FAILED_FILES=()
          for file in $FILES; do
            if ! diff -u "/tmp/java-backup/$(basename "$file").original" "$file"; then
              FAILED_FILES+=("$file")
              echo "::error::Found formatting issues in $file"
              echo "To fix, run: java -jar google-java-format.jar -i $file"
            fi
          done

          echo "Restoring original files..."
          for file in $FILES; do
            mv "/tmp/java-backup/$(basename "$file").original" "$file"
          done

          # Завершаем с ошибкой, если есть проблемы
          if [ ${#FAILED_FILES[@]} -ne 0 ]; then
            echo "::error::Java formatting check failed in ${#FAILED_FILES[@]} files."
            exit 1
          fi

      - name: Run tests with Gradle
        run: ./gradlew test --info

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test/**